/*
If both dbs are on the same server, use different values for production and
test setups.

1. Find & Replace DATABASE_NAME with database name
2. Find & Replace READER_ROLE with reader role name
3. Find & Replace WRITER_ROLE with writer role name
4. Find & Replace READER_USER with reader user name
5. Find & Replace WRITER_USER with writer user name
6. Find & Replace READER_PASSWORD wih reader password
7. Find & Replace WRITER_PASSWORD with writer password
*/

-- Login as admin

CREATE DATABASE DATABASE_NAME;
\connect DATABASE_NAME

-- prepare database

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON DATABASE DATABASE_NAME FROM PUBLIC;
CREATE SCHEMA catalogue;

-- create roles

CREATE ROLE READER_ROLE;
GRANT CONNECT ON DATABASE DATABASE_NAME TO READER_ROLE;
GRANT USAGE ON SCHEMA catalogue TO READER_ROLE;
GRANT SELECT ON ALL TABLES IN SCHEMA catalogue TO READER_ROLE;
ALTER DEFAULT PRIVILEGES IN SCHEMA catalogue GRANT SELECT ON TABLES TO READER_ROLE;

CREATE ROLE WRITER_ROLE;
GRANT CONNECT ON DATABASE DATABASE_NAME TO WRITER_ROLE;
GRANT USAGE ON SCHEMA catalogue TO WRITER_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA catalogue TO WRITER_ROLE;
GRANT USAGE ON ALL SEQUENCES IN SCHEMA catalogue TO WRITER_ROLE;
ALTER DEFAULT PRIVILEGES IN SCHEMA catalogue GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO WRITER_ROLE;
ALTER DEFAULT PRIVILEGES IN SCHEMA catalogue GRANT USAGE ON SEQUENCES TO WRITER_ROLE;

--create users

CREATE USER READER_USER WITH PASSWORD 'READER_PASSWORD';
CREATE USER WRITER_USER WITH PASSWORD 'WRITER_PASSWORD';

GRANT READER_ROLE TO READER_USER;
GRANT WRITER_ROLE TO WRITER_USER;

--create tables

CREATE TABLE catalogue.cube(
    storage_account VARCHAR(24) NOT NULL,
    container VARCHAR(63) NOT NULL,
    country VARCHAR(56) NOT NULL,
    field VARCHAR(50) NOT NULL,
    access_field_restricted BOOLEAN NOT NULL,
    filename VARCHAR(256) NOT NULL,
    PRIMARY KEY (storage_account, container)
);
